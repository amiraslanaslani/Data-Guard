package dataguard;

import crypto.CryptoConstants;
import crypto.CryptoTools;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.HashMap;
import javax.crypto.BadPaddingException;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Amir Aslan Aslani
 */
public class MainFrame extends javax.swing.JFrame {

    HashMap<String, String> currentFile;
    
    /**
     * Creates new form MainFrame
     */
    private String lastIndex = "";
    public MainFrame() {
        initComponents();
        
        // Set JFrame Icon
        ImageIcon img = new ImageIcon("./icon.png");
        this.setIconImage(img.getImage());
        
        // Set Combo Box Model
        ComboBoxModel<String> cbm = new DefaultComboBoxModel<>(CryptoConstants.CRYPTO);
        algorithm.setModel(cbm);
        
        currentFile = new HashMap<String, String>();
        
        this.updateDisplay();
        
        // Menu Selection Listener
        Menu.addListSelectionListener((lse) -> {
            if(ContentBox.isEnabled()){
                currentFile.put(lastIndex, ContentBox.getText());
            }
            
            String selected = Menu.getSelectedValue();
            lastIndex = selected;
            ContentBox.setText(currentFile.get(selected));
            ContentBox.setEnabled(true);
        });
    }
    
    private String[] listData;
    private void updateDisplay(){
        
        // Set List Data
        listData = Utils.StringCollectionToArray(currentFile.keySet());
        Menu.setListData(listData);
        
        // Clear All Things
        ContentBox.setText("");
        Menu.clearSelection();
        ContentBox.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Menu = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        ContentBox = new javax.swing.JTextArea();
        remove = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cipher = new javax.swing.JPasswordField();
        file = new javax.swing.JTextField();
        fileSelect = new javax.swing.JButton();
        algorithm = new javax.swing.JComboBox<>();
        load = new javax.swing.JButton();
        save = new javax.swing.JButton();
        createNewFile = new javax.swing.JButton();
        addNewSection = new javax.swing.JButton();
        newSectionName = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        openFileConvertionToolButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        openFolderConvertionToolButton = new javax.swing.JButton();
        openBatchFileConvertionToolButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Data Guard");
        setMinimumSize(new java.awt.Dimension(738, 218));

        Menu.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(Menu);

        ContentBox.setColumns(20);
        ContentBox.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 18)); // NOI18N
        ContentBox.setRows(5);
        jScrollPane2.setViewportView(ContentBox);

        remove.setText("Remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        jTabbedPane1.setToolTipText("");

        jLabel1.setText("Personal Cipher");

        jLabel2.setText("File Name");

        jLabel4.setText("Algorithm");

        fileSelect.setText("...");
        fileSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSelectActionPerformed(evt);
            }
        });

        load.setText("Load Data");
        load.setName(""); // NOI18N
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });

        save.setText("Save Data");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        createNewFile.setText("Create New File");
        createNewFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewFileActionPerformed(evt);
            }
        });

        addNewSection.setText("Create New Section");
        addNewSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewSectionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(load, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(14, 14, 14))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fileSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(algorithm, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(file)
                            .addComponent(cipher)))
                    .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createNewFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addNewSection, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                    .addComponent(newSectionName))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cipher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(file, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(fileSelect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(load)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createNewFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(newSectionName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addNewSection)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Main", jPanel3);

        openFileConvertionToolButton.setText("File Converting Tool");
        openFileConvertionToolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileConvertionToolButtonActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("V 0.0.2 - @AmirAslanAslani  :)");

        openFolderConvertionToolButton.setText("Folder Converting Tool");
        openFolderConvertionToolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFolderConvertionToolButtonActionPerformed(evt);
            }
        });

        openBatchFileConvertionToolButton1.setText("Batch File Converting Tool");
        openBatchFileConvertionToolButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openBatchFileConvertionToolButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(openFileConvertionToolButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(openFolderConvertionToolButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(openBatchFileConvertionToolButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(openFileConvertionToolButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openFolderConvertionToolButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openBatchFileConvertionToolButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 206, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tools", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(remove, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remove))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("Aslan's Cipher Center :)");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        String selected = Menu.getSelectedValue();
        Menu.clearSelection();
        
        if(selected != null && listData != null){
            currentFile.remove(selected);
            this.updateDisplay();
        }
    }//GEN-LAST:event_removeActionPerformed

    private void addNewSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewSectionActionPerformed
        String newName = newSectionName.getText().trim();
        if(newName.length() > 0 && ! currentFile.containsKey(newName)){
            currentFile.put(Menu.getSelectedValue(), ContentBox.getText());
            currentFile.put(newName, "");
            this.updateDisplay();
            newSectionName.setText("");
        }
    }//GEN-LAST:event_addNewSectionActionPerformed

    private void createNewFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewFileActionPerformed
        currentFile = new HashMap<>();
        file.setText("");
        this.updateDisplay();
    }//GEN-LAST:event_createNewFileActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        String key = cipher.getText().trim();
        String fileName = file.getText().trim();
        if(key.length() > 0 & fileName.length() > 0){
            currentFile.put(Menu.getSelectedValue(), ContentBox.getText());

            try{
                ByteArrayOutputStream os = new ByteArrayOutputStream();
                ObjectOutputStream oos = new ObjectOutputStream(os);
                oos.writeObject(currentFile);

                byte[] hashMapBytes = os.toByteArray();

                oos.close();
                os.close();

                CryptoTools.encryptBytesAndSaveFile(algorithm.getSelectedIndex(), key, new File(fileName), hashMapBytes);
            }
            catch(IOException e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage());
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        String key = cipher.getText().trim();
        String fileName = file.getText().trim();
        if(key.length() > 0 & fileName.length() > 0){
            try{
                File f = new File(fileName);
                
                byte[] hashMapBytes = CryptoTools.readFileAndDecrypt(algorithm.getSelectedIndex(), key, f);
                
                ByteArrayInputStream bais = new ByteArrayInputStream(hashMapBytes);
                ObjectInputStream ois = new ObjectInputStream(bais);

                currentFile = (HashMap <String, String>) ois.readObject();

                ois.close();
                bais.close();

                this.updateDisplay();
            }
            catch(BadPaddingException ex){
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Cipher is entered wrongly!");
            }
            catch(Exception ex){
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_loadActionPerformed

    private void fileSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSelectActionPerformed
        fc.showOpenDialog(this);
        File selected = fc.getSelectedFile();
        if(selected != null){
            file.setText(selected.getAbsolutePath());
        }
    }//GEN-LAST:event_fileSelectActionPerformed

    private void openFileConvertionToolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileConvertionToolButtonActionPerformed
        FileConvertingFrame fcf = new FileConvertingFrame();
        fcf.setVisible(true);
    }//GEN-LAST:event_openFileConvertionToolButtonActionPerformed

    private void openFolderConvertionToolButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFolderConvertionToolButtonActionPerformed
        FolderConvertingFrame fcf = new FolderConvertingFrame();
        fcf.setVisible(true);
    }//GEN-LAST:event_openFolderConvertionToolButtonActionPerformed

    private void openBatchFileConvertionToolButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openBatchFileConvertionToolButton1ActionPerformed
        BatchFileConvertingFrame bfc = new BatchFileConvertingFrame();
        bfc.setVisible(true);
    }//GEN-LAST:event_openBatchFileConvertionToolButton1ActionPerformed

    
    JFileChooser fc = new JFileChooser();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea ContentBox;
    private javax.swing.JList<String> Menu;
    private javax.swing.JButton addNewSection;
    private javax.swing.JComboBox<String> algorithm;
    private javax.swing.JPasswordField cipher;
    private javax.swing.JButton createNewFile;
    private javax.swing.JTextField file;
    private javax.swing.JButton fileSelect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton load;
    private javax.swing.JTextField newSectionName;
    private javax.swing.JButton openBatchFileConvertionToolButton1;
    private javax.swing.JButton openFileConvertionToolButton;
    private javax.swing.JButton openFolderConvertionToolButton;
    private javax.swing.JButton remove;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
